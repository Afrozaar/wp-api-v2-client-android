apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.3'

    // publish all buildTypes
    publishNonDefault true

    //defaultPublishConfig "debug"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 20015
        versionName "2.0-beta15"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // HTTP libs
    compile 'com.squareup.okhttp3:okhttp:3.4.1'

    // Parsing libs
    compile 'com.google.code.gson:gson:2.7'

    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.android.support:support-annotations:24.2.1'
}

android.libraryVariants.all { variant ->

    variant.outputs.each { output ->

        def aarSuffix = "-${variant.mergedFlavor.versionName}"
        def originalApkFile = output.getOutputFile()
        def newApkFile = originalApkFile.name.replace(".aar", "${aarSuffix}.aar")
        output.setOutputFile(new File("${projectDir}/aars/${newApkFile}"))

        // print the APK path as the last step before install, at which point the apk is complete
        variant.assemble?.doFirst { // the install task can be null
            println ""
            println "Output file:"
            println output.getOutputFile()
            println ""
        }
    }
}